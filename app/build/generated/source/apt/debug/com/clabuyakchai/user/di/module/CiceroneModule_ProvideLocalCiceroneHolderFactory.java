// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.di.module;

import com.clabuyakchai.user.ui.fragment.tab.LocalCiceroneHolder;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class CiceroneModule_ProvideLocalCiceroneHolderFactory
    implements Factory<LocalCiceroneHolder> {
  private final CiceroneModule module;

  public CiceroneModule_ProvideLocalCiceroneHolderFactory(CiceroneModule module) {
    this.module = module;
  }

  @Override
  public LocalCiceroneHolder get() {
    return proxyProvideLocalCiceroneHolder(module);
  }

  public static CiceroneModule_ProvideLocalCiceroneHolderFactory create(CiceroneModule module) {
    return new CiceroneModule_ProvideLocalCiceroneHolderFactory(module);
  }

  public static LocalCiceroneHolder proxyProvideLocalCiceroneHolder(CiceroneModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLocalCiceroneHolder(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
