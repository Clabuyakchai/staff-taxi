// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.di.module;

import com.clabuyakchai.user.data.remote.StaffApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class RemoteModule_ProvideStaffApiFactory implements Factory<StaffApi> {
  private final RemoteModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RemoteModule_ProvideStaffApiFactory(
      RemoteModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public StaffApi get() {
    return proxyProvideStaffApi(module, retrofitProvider.get());
  }

  public static RemoteModule_ProvideStaffApiFactory create(
      RemoteModule module, Provider<Retrofit> retrofitProvider) {
    return new RemoteModule_ProvideStaffApiFactory(module, retrofitProvider);
  }

  public static StaffApi proxyProvideStaffApi(RemoteModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideStaffApi(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
