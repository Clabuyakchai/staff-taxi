// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.ui.fragment.navigation.route;

import com.clabuyakchai.user.data.repository.RouteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RoutePresenter_Factory implements Factory<RoutePresenter> {
  private final Provider<RouteRepository> routeRepositoryProvider;

  public RoutePresenter_Factory(Provider<RouteRepository> routeRepositoryProvider) {
    this.routeRepositoryProvider = routeRepositoryProvider;
  }

  @Override
  public RoutePresenter get() {
    return new RoutePresenter(routeRepositoryProvider.get());
  }

  public static RoutePresenter_Factory create(Provider<RouteRepository> routeRepositoryProvider) {
    return new RoutePresenter_Factory(routeRepositoryProvider);
  }

  public static RoutePresenter newRoutePresenter(RouteRepository routeRepository) {
    return new RoutePresenter(routeRepository);
  }
}
