// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.ui.activity.navigation;

import dagger.internal.Factory;
import javax.inject.Provider;
import ru.terrakok.cicerone.Router;

public final class NavigationActivityPresenter_Factory
    implements Factory<NavigationActivityPresenter> {
  private final Provider<Router> routerProvider;

  public NavigationActivityPresenter_Factory(Provider<Router> routerProvider) {
    this.routerProvider = routerProvider;
  }

  @Override
  public NavigationActivityPresenter get() {
    return new NavigationActivityPresenter(routerProvider.get());
  }

  public static NavigationActivityPresenter_Factory create(Provider<Router> routerProvider) {
    return new NavigationActivityPresenter_Factory(routerProvider);
  }

  public static NavigationActivityPresenter newNavigationActivityPresenter(Router router) {
    return new NavigationActivityPresenter(router);
  }
}
