// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.ui.fragment.auth.phone;

import androidx.fragment.app.Fragment;
import com.clabuyakchai.staff.ui.base.BaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class AuthPhoneFragment_MembersInjector implements MembersInjector<AuthPhoneFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>>
      fragmentDispatchingAndroidInjectorProvider;

  private final Provider<AuthPhonePresenterImpl> presenterProvider;

  public AuthPhoneFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<AuthPhonePresenterImpl> presenterProvider) {
    this.fragmentDispatchingAndroidInjectorProvider = fragmentDispatchingAndroidInjectorProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<AuthPhoneFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<AuthPhonePresenterImpl> presenterProvider) {
    return new AuthPhoneFragment_MembersInjector(
        fragmentDispatchingAndroidInjectorProvider, presenterProvider);
  }

  @Override
  public void injectMembers(AuthPhoneFragment instance) {
    BaseFragment_MembersInjector.injectFragmentDispatchingAndroidInjector(
        instance, fragmentDispatchingAndroidInjectorProvider.get());
    injectPresenter(instance, presenterProvider.get());
  }

  public static void injectPresenter(AuthPhoneFragment instance, AuthPhonePresenterImpl presenter) {
    instance.presenter = presenter;
  }
}
