// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.data.repository.Impl;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthProvider;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<FirebaseAuth> authProvider;

  private final Provider<PhoneAuthProvider> providerProvider;

  public AuthRepositoryImpl_Factory(
      Provider<FirebaseAuth> authProvider, Provider<PhoneAuthProvider> providerProvider) {
    this.authProvider = authProvider;
    this.providerProvider = providerProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return new AuthRepositoryImpl(authProvider.get(), providerProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(
      Provider<FirebaseAuth> authProvider, Provider<PhoneAuthProvider> providerProvider) {
    return new AuthRepositoryImpl_Factory(authProvider, providerProvider);
  }

  public static AuthRepositoryImpl newAuthRepositoryImpl(
      FirebaseAuth auth, PhoneAuthProvider provider) {
    return new AuthRepositoryImpl(auth, provider);
  }
}
