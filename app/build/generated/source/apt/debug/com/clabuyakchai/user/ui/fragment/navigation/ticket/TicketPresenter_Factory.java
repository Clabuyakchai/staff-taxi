// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.ui.fragment.navigation.ticket;

import com.clabuyakchai.user.data.repository.RouteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TicketPresenter_Factory implements Factory<TicketPresenter> {
  private final Provider<RouteRepository> repositoryProvider;

  public TicketPresenter_Factory(Provider<RouteRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public TicketPresenter get() {
    return new TicketPresenter(repositoryProvider.get());
  }

  public static TicketPresenter_Factory create(Provider<RouteRepository> repositoryProvider) {
    return new TicketPresenter_Factory(repositoryProvider);
  }

  public static TicketPresenter newTicketPresenter(RouteRepository repository) {
    return new TicketPresenter(repository);
  }
}
