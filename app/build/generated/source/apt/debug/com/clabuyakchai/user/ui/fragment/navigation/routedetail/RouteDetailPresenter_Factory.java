// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.ui.fragment.navigation.routedetail;

import com.clabuyakchai.user.data.repository.RouteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RouteDetailPresenter_Factory implements Factory<RouteDetailPresenter> {
  private final Provider<RouteRepository> routeRepositoryProvider;

  public RouteDetailPresenter_Factory(Provider<RouteRepository> routeRepositoryProvider) {
    this.routeRepositoryProvider = routeRepositoryProvider;
  }

  @Override
  public RouteDetailPresenter get() {
    return new RouteDetailPresenter(routeRepositoryProvider.get());
  }

  public static RouteDetailPresenter_Factory create(
      Provider<RouteRepository> routeRepositoryProvider) {
    return new RouteDetailPresenter_Factory(routeRepositoryProvider);
  }

  public static RouteDetailPresenter newRouteDetailPresenter(RouteRepository routeRepository) {
    return new RouteDetailPresenter(routeRepository);
  }
}
