// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.user.ui.fragment.auth.code;

import com.clabuyakchai.user.data.repository.AuthRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AuthCodePresenter_Factory implements Factory<AuthCodePresenter> {
  private final Provider<AuthRepository> authRepositoryProvider;

  public AuthCodePresenter_Factory(Provider<AuthRepository> authRepositoryProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
  }

  @Override
  public AuthCodePresenter get() {
    return new AuthCodePresenter(authRepositoryProvider.get());
  }

  public static AuthCodePresenter_Factory create(Provider<AuthRepository> authRepositoryProvider) {
    return new AuthCodePresenter_Factory(authRepositoryProvider);
  }

  public static AuthCodePresenter newAuthCodePresenter(AuthRepository authRepository) {
    return new AuthCodePresenter(authRepository);
  }
}
