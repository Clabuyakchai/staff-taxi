// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.data.repository.Impl;

import com.clabuyakchai.staff.data.remote.StaffApi;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthProvider;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<FirebaseAuth> authProvider;

  private final Provider<PhoneAuthProvider> providerProvider;

  private final Provider<StaffApi> staffApiProvider;

  public AuthRepositoryImpl_Factory(
      Provider<FirebaseAuth> authProvider,
      Provider<PhoneAuthProvider> providerProvider,
      Provider<StaffApi> staffApiProvider) {
    this.authProvider = authProvider;
    this.providerProvider = providerProvider;
    this.staffApiProvider = staffApiProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return new AuthRepositoryImpl(
        authProvider.get(), providerProvider.get(), staffApiProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(
      Provider<FirebaseAuth> authProvider,
      Provider<PhoneAuthProvider> providerProvider,
      Provider<StaffApi> staffApiProvider) {
    return new AuthRepositoryImpl_Factory(authProvider, providerProvider, staffApiProvider);
  }

  public static AuthRepositoryImpl newAuthRepositoryImpl(
      FirebaseAuth auth, PhoneAuthProvider provider, StaffApi staffApi) {
    return new AuthRepositoryImpl(auth, provider, staffApi);
  }
}
