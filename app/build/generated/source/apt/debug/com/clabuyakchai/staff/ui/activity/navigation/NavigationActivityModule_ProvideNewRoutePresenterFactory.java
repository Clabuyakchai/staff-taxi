// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.ui.activity.navigation;

import com.clabuyakchai.staff.data.repository.RouteRepository;
import com.clabuyakchai.staff.data.repository.StationRepository;
import com.clabuyakchai.staff.ui.fragment.navigation.newroute.NewRoutePresenter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class NavigationActivityModule_ProvideNewRoutePresenterFactory
    implements Factory<NewRoutePresenter> {
  private final NavigationActivityModule module;

  private final Provider<StationRepository> stationRepositoryProvider;

  private final Provider<RouteRepository> routeRepositoryProvider;

  public NavigationActivityModule_ProvideNewRoutePresenterFactory(
      NavigationActivityModule module,
      Provider<StationRepository> stationRepositoryProvider,
      Provider<RouteRepository> routeRepositoryProvider) {
    this.module = module;
    this.stationRepositoryProvider = stationRepositoryProvider;
    this.routeRepositoryProvider = routeRepositoryProvider;
  }

  @Override
  public NewRoutePresenter get() {
    return proxyProvideNewRoutePresenter(
        module, stationRepositoryProvider.get(), routeRepositoryProvider.get());
  }

  public static NavigationActivityModule_ProvideNewRoutePresenterFactory create(
      NavigationActivityModule module,
      Provider<StationRepository> stationRepositoryProvider,
      Provider<RouteRepository> routeRepositoryProvider) {
    return new NavigationActivityModule_ProvideNewRoutePresenterFactory(
        module, stationRepositoryProvider, routeRepositoryProvider);
  }

  public static NewRoutePresenter proxyProvideNewRoutePresenter(
      NavigationActivityModule instance,
      StationRepository stationRepository,
      RouteRepository routeRepository) {
    return Preconditions.checkNotNull(
        instance.provideNewRoutePresenter(stationRepository, routeRepository),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
