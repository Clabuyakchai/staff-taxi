// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.ui.fragment.navigation.home;

import com.clabuyakchai.staff.data.repository.HomeRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class HomePresenter_Factory implements Factory<HomePresenter> {
  private final Provider<HomeRepository> homeRepositoryProvider;

  public HomePresenter_Factory(Provider<HomeRepository> homeRepositoryProvider) {
    this.homeRepositoryProvider = homeRepositoryProvider;
  }

  @Override
  public HomePresenter get() {
    return new HomePresenter(homeRepositoryProvider.get());
  }

  public static HomePresenter_Factory create(Provider<HomeRepository> homeRepositoryProvider) {
    return new HomePresenter_Factory(homeRepositoryProvider);
  }

  public static HomePresenter newHomePresenter(HomeRepository homeRepository) {
    return new HomePresenter(homeRepository);
  }
}
