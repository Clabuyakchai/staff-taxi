// Generated by Dagger (https://google.github.io/dagger).
package com.clabuyakchai.staff.ui.fragment.auth.registration;

import com.clabuyakchai.staff.data.repository.AuthRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RegistrationPresenter_Factory implements Factory<RegistrationPresenter> {
  private final Provider<AuthRepository> authRepositoryProvider;

  public RegistrationPresenter_Factory(Provider<AuthRepository> authRepositoryProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
  }

  @Override
  public RegistrationPresenter get() {
    return new RegistrationPresenter(authRepositoryProvider.get());
  }

  public static RegistrationPresenter_Factory create(
      Provider<AuthRepository> authRepositoryProvider) {
    return new RegistrationPresenter_Factory(authRepositoryProvider);
  }

  public static RegistrationPresenter newRegistrationPresenter(AuthRepository authRepository) {
    return new RegistrationPresenter(authRepository);
  }
}
